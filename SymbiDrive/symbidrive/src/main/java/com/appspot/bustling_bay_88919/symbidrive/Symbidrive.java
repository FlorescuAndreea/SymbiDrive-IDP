/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://code.google.com/p/google-apis-client-generator/
 * (build: 2015-03-26 20:30:19 UTC)
 * on 2015-06-27 at 11:22:51 UTC 
 * Modify at your own risk.
 */

package com.appspot.bustling_bay_88919.symbidrive;

/**
 * Service definition for Symbidrive (v1.1).
 *
 * <p>
 * This is an API
 * </p>
 *
 * <p>
 * For more information about this service, see the
 * <a href="" target="_blank">API Documentation</a>
 * </p>
 *
 * <p>
 * This service uses {@link SymbidriveRequestInitializer} to initialize global parameters via its
 * {@link Builder}.
 * </p>
 *
 * @since 1.3
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public class Symbidrive extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient {

  // Note: Leave this static initializer at the top of the file.
  static {
    com.google.api.client.util.Preconditions.checkState(
        com.google.api.client.googleapis.GoogleUtils.MAJOR_VERSION == 1 &&
        com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION >= 15,
        "You are currently running with version %s of google-api-client. " +
        "You need at least version 1.15 of google-api-client to run version " +
        "1.20.0 of the symbidrive library.", com.google.api.client.googleapis.GoogleUtils.VERSION);
  }

  /**
   * The default encoded root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_ROOT_URL = "https://bustling-bay-88919.appspot.com/_ah/api/";

  /**
   * The default encoded service path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_SERVICE_PATH = "symbidrive/v1.1/";

  /**
   * The default encoded base URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   */
  public static final String DEFAULT_BASE_URL = DEFAULT_ROOT_URL + DEFAULT_SERVICE_PATH;

  /**
   * Constructor.
   *
   * <p>
   * Use {@link Builder} if you need to specify any of the optional parameters.
   * </p>
   *
   * @param transport HTTP transport, which should normally be:
   *        <ul>
   *        <li>Google App Engine:
   *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
   *        <li>Android: {@code newCompatibleTransport} from
   *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
   *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
   *        </li>
   *        </ul>
   * @param jsonFactory JSON factory, which may be:
   *        <ul>
   *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
   *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
   *        <li>Android Honeycomb or higher:
   *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
   *        </ul>
   * @param httpRequestInitializer HTTP request initializer or {@code null} for none
   * @since 1.7
   */
  public Symbidrive(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
      com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
    this(new Builder(transport, jsonFactory, httpRequestInitializer));
  }

  /**
   * @param builder builder
   */
  Symbidrive(Builder builder) {
    super(builder);
  }

  @Override
  protected void initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest<?> httpClientRequest) throws java.io.IOException {
    super.initialize(httpClientRequest);
  }

  /**
   * Create a request for the method "add_feedback".
   *
   * This request holds the parameters needed by the symbidrive server.  After setting any optional
   * parameters, call the {@link AddFeedback#execute()} method to invoke the remote operation.
   *
   * @param content the {@link com.appspot.bustling_bay_88919.symbidrive.model.SymbidriveAddFeedbackRequest}
   * @return the request
   */
  public AddFeedback addFeedback(com.appspot.bustling_bay_88919.symbidrive.model.SymbidriveAddFeedbackRequest content) throws java.io.IOException {
    AddFeedback result = new AddFeedback(content);
    initialize(result);
    return result;
  }

  public class AddFeedback extends SymbidriveRequest<com.appspot.bustling_bay_88919.symbidrive.model.SymbidriveUserResponse> {

    private static final String REST_PATH = "user/add_feedback";

    /**
     * Create a request for the method "add_feedback".
     *
     * This request holds the parameters needed by the the symbidrive server.  After setting any
     * optional parameters, call the {@link AddFeedback#execute()} method to invoke the remote
     * operation. <p> {@link
     * AddFeedback#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param content the {@link com.appspot.bustling_bay_88919.symbidrive.model.SymbidriveAddFeedbackRequest}
     * @since 1.13
     */
    protected AddFeedback(com.appspot.bustling_bay_88919.symbidrive.model.SymbidriveAddFeedbackRequest content) {
      super(Symbidrive.this, "POST", REST_PATH, content, com.appspot.bustling_bay_88919.symbidrive.model.SymbidriveUserResponse.class);
    }

    @Override
    public AddFeedback setAlt(java.lang.String alt) {
      return (AddFeedback) super.setAlt(alt);
    }

    @Override
    public AddFeedback setFields(java.lang.String fields) {
      return (AddFeedback) super.setFields(fields);
    }

    @Override
    public AddFeedback setKey(java.lang.String key) {
      return (AddFeedback) super.setKey(key);
    }

    @Override
    public AddFeedback setOauthToken(java.lang.String oauthToken) {
      return (AddFeedback) super.setOauthToken(oauthToken);
    }

    @Override
    public AddFeedback setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (AddFeedback) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public AddFeedback setQuotaUser(java.lang.String quotaUser) {
      return (AddFeedback) super.setQuotaUser(quotaUser);
    }

    @Override
    public AddFeedback setUserIp(java.lang.String userIp) {
      return (AddFeedback) super.setUserIp(userIp);
    }

    @Override
    public AddFeedback set(String parameterName, Object value) {
      return (AddFeedback) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "add_passenger_to_pool".
   *
   * This request holds the parameters needed by the symbidrive server.  After setting any optional
   * parameters, call the {@link AddPassengerToPool#execute()} method to invoke the remote operation.
   *
   * @param content the {@link com.appspot.bustling_bay_88919.symbidrive.model.SymbidriveManagePassangerRequest}
   * @return the request
   */
  public AddPassengerToPool addPassengerToPool(com.appspot.bustling_bay_88919.symbidrive.model.SymbidriveManagePassangerRequest content) throws java.io.IOException {
    AddPassengerToPool result = new AddPassengerToPool(content);
    initialize(result);
    return result;
  }

  public class AddPassengerToPool extends SymbidriveRequest<com.appspot.bustling_bay_88919.symbidrive.model.SymbidrivePoolResponse> {

    private static final String REST_PATH = "pool/add_passenger_to_pool";

    /**
     * Create a request for the method "add_passenger_to_pool".
     *
     * This request holds the parameters needed by the the symbidrive server.  After setting any
     * optional parameters, call the {@link AddPassengerToPool#execute()} method to invoke the remote
     * operation. <p> {@link AddPassengerToPool#initialize(com.google.api.client.googleapis.services.A
     * bstractGoogleClientRequest)} must be called to initialize this instance immediately after
     * invoking the constructor. </p>
     *
     * @param content the {@link com.appspot.bustling_bay_88919.symbidrive.model.SymbidriveManagePassangerRequest}
     * @since 1.13
     */
    protected AddPassengerToPool(com.appspot.bustling_bay_88919.symbidrive.model.SymbidriveManagePassangerRequest content) {
      super(Symbidrive.this, "POST", REST_PATH, content, com.appspot.bustling_bay_88919.symbidrive.model.SymbidrivePoolResponse.class);
    }

    @Override
    public AddPassengerToPool setAlt(java.lang.String alt) {
      return (AddPassengerToPool) super.setAlt(alt);
    }

    @Override
    public AddPassengerToPool setFields(java.lang.String fields) {
      return (AddPassengerToPool) super.setFields(fields);
    }

    @Override
    public AddPassengerToPool setKey(java.lang.String key) {
      return (AddPassengerToPool) super.setKey(key);
    }

    @Override
    public AddPassengerToPool setOauthToken(java.lang.String oauthToken) {
      return (AddPassengerToPool) super.setOauthToken(oauthToken);
    }

    @Override
    public AddPassengerToPool setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (AddPassengerToPool) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public AddPassengerToPool setQuotaUser(java.lang.String quotaUser) {
      return (AddPassengerToPool) super.setQuotaUser(quotaUser);
    }

    @Override
    public AddPassengerToPool setUserIp(java.lang.String userIp) {
      return (AddPassengerToPool) super.setUserIp(userIp);
    }

    @Override
    public AddPassengerToPool set(String parameterName, Object value) {
      return (AddPassengerToPool) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "add_rating".
   *
   * This request holds the parameters needed by the symbidrive server.  After setting any optional
   * parameters, call the {@link AddRating#execute()} method to invoke the remote operation.
   *
   * @param content the {@link com.appspot.bustling_bay_88919.symbidrive.model.SymbidriveAddRatingRequest}
   * @return the request
   */
  public AddRating addRating(com.appspot.bustling_bay_88919.symbidrive.model.SymbidriveAddRatingRequest content) throws java.io.IOException {
    AddRating result = new AddRating(content);
    initialize(result);
    return result;
  }

  public class AddRating extends SymbidriveRequest<com.appspot.bustling_bay_88919.symbidrive.model.SymbidriveUserResponse> {

    private static final String REST_PATH = "user/add_rating";

    /**
     * Create a request for the method "add_rating".
     *
     * This request holds the parameters needed by the the symbidrive server.  After setting any
     * optional parameters, call the {@link AddRating#execute()} method to invoke the remote
     * operation. <p> {@link
     * AddRating#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param content the {@link com.appspot.bustling_bay_88919.symbidrive.model.SymbidriveAddRatingRequest}
     * @since 1.13
     */
    protected AddRating(com.appspot.bustling_bay_88919.symbidrive.model.SymbidriveAddRatingRequest content) {
      super(Symbidrive.this, "POST", REST_PATH, content, com.appspot.bustling_bay_88919.symbidrive.model.SymbidriveUserResponse.class);
    }

    @Override
    public AddRating setAlt(java.lang.String alt) {
      return (AddRating) super.setAlt(alt);
    }

    @Override
    public AddRating setFields(java.lang.String fields) {
      return (AddRating) super.setFields(fields);
    }

    @Override
    public AddRating setKey(java.lang.String key) {
      return (AddRating) super.setKey(key);
    }

    @Override
    public AddRating setOauthToken(java.lang.String oauthToken) {
      return (AddRating) super.setOauthToken(oauthToken);
    }

    @Override
    public AddRating setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (AddRating) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public AddRating setQuotaUser(java.lang.String quotaUser) {
      return (AddRating) super.setQuotaUser(quotaUser);
    }

    @Override
    public AddRating setUserIp(java.lang.String userIp) {
      return (AddRating) super.setUserIp(userIp);
    }

    @Override
    public AddRating set(String parameterName, Object value) {
      return (AddRating) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "create_pool".
   *
   * This request holds the parameters needed by the symbidrive server.  After setting any optional
   * parameters, call the {@link CreatePool#execute()} method to invoke the remote operation.
   *
   * @param content the {@link com.appspot.bustling_bay_88919.symbidrive.model.SymbidriveCreatePoolRequest}
   * @return the request
   */
  public CreatePool createPool(com.appspot.bustling_bay_88919.symbidrive.model.SymbidriveCreatePoolRequest content) throws java.io.IOException {
    CreatePool result = new CreatePool(content);
    initialize(result);
    return result;
  }

  public class CreatePool extends SymbidriveRequest<com.appspot.bustling_bay_88919.symbidrive.model.SymbidrivePoolResponse> {

    private static final String REST_PATH = "pool/create_pool";

    /**
     * Create a request for the method "create_pool".
     *
     * This request holds the parameters needed by the the symbidrive server.  After setting any
     * optional parameters, call the {@link CreatePool#execute()} method to invoke the remote
     * operation. <p> {@link
     * CreatePool#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param content the {@link com.appspot.bustling_bay_88919.symbidrive.model.SymbidriveCreatePoolRequest}
     * @since 1.13
     */
    protected CreatePool(com.appspot.bustling_bay_88919.symbidrive.model.SymbidriveCreatePoolRequest content) {
      super(Symbidrive.this, "POST", REST_PATH, content, com.appspot.bustling_bay_88919.symbidrive.model.SymbidrivePoolResponse.class);
    }

    @Override
    public CreatePool setAlt(java.lang.String alt) {
      return (CreatePool) super.setAlt(alt);
    }

    @Override
    public CreatePool setFields(java.lang.String fields) {
      return (CreatePool) super.setFields(fields);
    }

    @Override
    public CreatePool setKey(java.lang.String key) {
      return (CreatePool) super.setKey(key);
    }

    @Override
    public CreatePool setOauthToken(java.lang.String oauthToken) {
      return (CreatePool) super.setOauthToken(oauthToken);
    }

    @Override
    public CreatePool setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (CreatePool) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public CreatePool setQuotaUser(java.lang.String quotaUser) {
      return (CreatePool) super.setQuotaUser(quotaUser);
    }

    @Override
    public CreatePool setUserIp(java.lang.String userIp) {
      return (CreatePool) super.setUserIp(userIp);
    }

    @Override
    public CreatePool set(String parameterName, Object value) {
      return (CreatePool) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "create_route".
   *
   * This request holds the parameters needed by the symbidrive server.  After setting any optional
   * parameters, call the {@link CreateRoute#execute()} method to invoke the remote operation.
   *
   * @param content the {@link com.appspot.bustling_bay_88919.symbidrive.model.SymbidriveCreateRouteRequest}
   * @return the request
   */
  public CreateRoute createRoute(com.appspot.bustling_bay_88919.symbidrive.model.SymbidriveCreateRouteRequest content) throws java.io.IOException {
    CreateRoute result = new CreateRoute(content);
    initialize(result);
    return result;
  }

  public class CreateRoute extends SymbidriveRequest<com.appspot.bustling_bay_88919.symbidrive.model.SymbidriveCreateRouteResponse> {

    private static final String REST_PATH = "route/create_route";

    /**
     * Create a request for the method "create_route".
     *
     * This request holds the parameters needed by the the symbidrive server.  After setting any
     * optional parameters, call the {@link CreateRoute#execute()} method to invoke the remote
     * operation. <p> {@link
     * CreateRoute#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param content the {@link com.appspot.bustling_bay_88919.symbidrive.model.SymbidriveCreateRouteRequest}
     * @since 1.13
     */
    protected CreateRoute(com.appspot.bustling_bay_88919.symbidrive.model.SymbidriveCreateRouteRequest content) {
      super(Symbidrive.this, "POST", REST_PATH, content, com.appspot.bustling_bay_88919.symbidrive.model.SymbidriveCreateRouteResponse.class);
    }

    @Override
    public CreateRoute setAlt(java.lang.String alt) {
      return (CreateRoute) super.setAlt(alt);
    }

    @Override
    public CreateRoute setFields(java.lang.String fields) {
      return (CreateRoute) super.setFields(fields);
    }

    @Override
    public CreateRoute setKey(java.lang.String key) {
      return (CreateRoute) super.setKey(key);
    }

    @Override
    public CreateRoute setOauthToken(java.lang.String oauthToken) {
      return (CreateRoute) super.setOauthToken(oauthToken);
    }

    @Override
    public CreateRoute setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (CreateRoute) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public CreateRoute setQuotaUser(java.lang.String quotaUser) {
      return (CreateRoute) super.setQuotaUser(quotaUser);
    }

    @Override
    public CreateRoute setUserIp(java.lang.String userIp) {
      return (CreateRoute) super.setUserIp(userIp);
    }

    @Override
    public CreateRoute set(String parameterName, Object value) {
      return (CreateRoute) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "delete_passenger_from_pool".
   *
   * This request holds the parameters needed by the symbidrive server.  After setting any optional
   * parameters, call the {@link DeletePassengerFromPool#execute()} method to invoke the remote
   * operation.
   *
   * @param content the {@link com.appspot.bustling_bay_88919.symbidrive.model.SymbidriveManagePassangerRequest}
   * @return the request
   */
  public DeletePassengerFromPool deletePassengerFromPool(com.appspot.bustling_bay_88919.symbidrive.model.SymbidriveManagePassangerRequest content) throws java.io.IOException {
    DeletePassengerFromPool result = new DeletePassengerFromPool(content);
    initialize(result);
    return result;
  }

  public class DeletePassengerFromPool extends SymbidriveRequest<com.appspot.bustling_bay_88919.symbidrive.model.SymbidrivePoolResponse> {

    private static final String REST_PATH = "pool/delete_passenger_from_pool";

    /**
     * Create a request for the method "delete_passenger_from_pool".
     *
     * This request holds the parameters needed by the the symbidrive server.  After setting any
     * optional parameters, call the {@link DeletePassengerFromPool#execute()} method to invoke the
     * remote operation. <p> {@link DeletePassengerFromPool#initialize(com.google.api.client.googleapi
     * s.services.AbstractGoogleClientRequest)} must be called to initialize this instance immediately
     * after invoking the constructor. </p>
     *
     * @param content the {@link com.appspot.bustling_bay_88919.symbidrive.model.SymbidriveManagePassangerRequest}
     * @since 1.13
     */
    protected DeletePassengerFromPool(com.appspot.bustling_bay_88919.symbidrive.model.SymbidriveManagePassangerRequest content) {
      super(Symbidrive.this, "POST", REST_PATH, content, com.appspot.bustling_bay_88919.symbidrive.model.SymbidrivePoolResponse.class);
    }

    @Override
    public DeletePassengerFromPool setAlt(java.lang.String alt) {
      return (DeletePassengerFromPool) super.setAlt(alt);
    }

    @Override
    public DeletePassengerFromPool setFields(java.lang.String fields) {
      return (DeletePassengerFromPool) super.setFields(fields);
    }

    @Override
    public DeletePassengerFromPool setKey(java.lang.String key) {
      return (DeletePassengerFromPool) super.setKey(key);
    }

    @Override
    public DeletePassengerFromPool setOauthToken(java.lang.String oauthToken) {
      return (DeletePassengerFromPool) super.setOauthToken(oauthToken);
    }

    @Override
    public DeletePassengerFromPool setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (DeletePassengerFromPool) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public DeletePassengerFromPool setQuotaUser(java.lang.String quotaUser) {
      return (DeletePassengerFromPool) super.setQuotaUser(quotaUser);
    }

    @Override
    public DeletePassengerFromPool setUserIp(java.lang.String userIp) {
      return (DeletePassengerFromPool) super.setUserIp(userIp);
    }

    @Override
    public DeletePassengerFromPool set(String parameterName, Object value) {
      return (DeletePassengerFromPool) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "delete_pool".
   *
   * This request holds the parameters needed by the symbidrive server.  After setting any optional
   * parameters, call the {@link DeletePool#execute()} method to invoke the remote operation.
   *
   * @param content the {@link com.appspot.bustling_bay_88919.symbidrive.model.SymbidriveDeletePoolRequest}
   * @return the request
   */
  public DeletePool deletePool(com.appspot.bustling_bay_88919.symbidrive.model.SymbidriveDeletePoolRequest content) throws java.io.IOException {
    DeletePool result = new DeletePool(content);
    initialize(result);
    return result;
  }

  public class DeletePool extends SymbidriveRequest<com.appspot.bustling_bay_88919.symbidrive.model.SymbidrivePoolResponse> {

    private static final String REST_PATH = "pool/delete_pool";

    /**
     * Create a request for the method "delete_pool".
     *
     * This request holds the parameters needed by the the symbidrive server.  After setting any
     * optional parameters, call the {@link DeletePool#execute()} method to invoke the remote
     * operation. <p> {@link
     * DeletePool#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param content the {@link com.appspot.bustling_bay_88919.symbidrive.model.SymbidriveDeletePoolRequest}
     * @since 1.13
     */
    protected DeletePool(com.appspot.bustling_bay_88919.symbidrive.model.SymbidriveDeletePoolRequest content) {
      super(Symbidrive.this, "POST", REST_PATH, content, com.appspot.bustling_bay_88919.symbidrive.model.SymbidrivePoolResponse.class);
    }

    @Override
    public DeletePool setAlt(java.lang.String alt) {
      return (DeletePool) super.setAlt(alt);
    }

    @Override
    public DeletePool setFields(java.lang.String fields) {
      return (DeletePool) super.setFields(fields);
    }

    @Override
    public DeletePool setKey(java.lang.String key) {
      return (DeletePool) super.setKey(key);
    }

    @Override
    public DeletePool setOauthToken(java.lang.String oauthToken) {
      return (DeletePool) super.setOauthToken(oauthToken);
    }

    @Override
    public DeletePool setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (DeletePool) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public DeletePool setQuotaUser(java.lang.String quotaUser) {
      return (DeletePool) super.setQuotaUser(quotaUser);
    }

    @Override
    public DeletePool setUserIp(java.lang.String userIp) {
      return (DeletePool) super.setUserIp(userIp);
    }

    @Override
    public DeletePool set(String parameterName, Object value) {
      return (DeletePool) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "find_pool".
   *
   * This request holds the parameters needed by the symbidrive server.  After setting any optional
   * parameters, call the {@link FindPool#execute()} method to invoke the remote operation.
   *
   * @param content the {@link com.appspot.bustling_bay_88919.symbidrive.model.SymbidriveFindPoolRequest}
   * @return the request
   */
  public FindPool findPool(com.appspot.bustling_bay_88919.symbidrive.model.SymbidriveFindPoolRequest content) throws java.io.IOException {
    FindPool result = new FindPool(content);
    initialize(result);
    return result;
  }

  public class FindPool extends SymbidriveRequest<com.appspot.bustling_bay_88919.symbidrive.model.SymbidriveFindPoolResponse> {

    private static final String REST_PATH = "pool/find_pool";

    /**
     * Create a request for the method "find_pool".
     *
     * This request holds the parameters needed by the the symbidrive server.  After setting any
     * optional parameters, call the {@link FindPool#execute()} method to invoke the remote operation.
     * <p> {@link
     * FindPool#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param content the {@link com.appspot.bustling_bay_88919.symbidrive.model.SymbidriveFindPoolRequest}
     * @since 1.13
     */
    protected FindPool(com.appspot.bustling_bay_88919.symbidrive.model.SymbidriveFindPoolRequest content) {
      super(Symbidrive.this, "POST", REST_PATH, content, com.appspot.bustling_bay_88919.symbidrive.model.SymbidriveFindPoolResponse.class);
    }

    @Override
    public FindPool setAlt(java.lang.String alt) {
      return (FindPool) super.setAlt(alt);
    }

    @Override
    public FindPool setFields(java.lang.String fields) {
      return (FindPool) super.setFields(fields);
    }

    @Override
    public FindPool setKey(java.lang.String key) {
      return (FindPool) super.setKey(key);
    }

    @Override
    public FindPool setOauthToken(java.lang.String oauthToken) {
      return (FindPool) super.setOauthToken(oauthToken);
    }

    @Override
    public FindPool setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (FindPool) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public FindPool setQuotaUser(java.lang.String quotaUser) {
      return (FindPool) super.setQuotaUser(quotaUser);
    }

    @Override
    public FindPool setUserIp(java.lang.String userIp) {
      return (FindPool) super.setUserIp(userIp);
    }

    @Override
    public FindPool set(String parameterName, Object value) {
      return (FindPool) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "get_routes".
   *
   * This request holds the parameters needed by the symbidrive server.  After setting any optional
   * parameters, call the {@link GetRoutes#execute()} method to invoke the remote operation.
   *
   * @param content the {@link com.appspot.bustling_bay_88919.symbidrive.model.SymbidriveGetRoutesRequest}
   * @return the request
   */
  public GetRoutes getRoutes(com.appspot.bustling_bay_88919.symbidrive.model.SymbidriveGetRoutesRequest content) throws java.io.IOException {
    GetRoutes result = new GetRoutes(content);
    initialize(result);
    return result;
  }

  public class GetRoutes extends SymbidriveRequest<com.appspot.bustling_bay_88919.symbidrive.model.SymbidriveGetRoutesResponse> {

    private static final String REST_PATH = "route/get_routes";

    /**
     * Create a request for the method "get_routes".
     *
     * This request holds the parameters needed by the the symbidrive server.  After setting any
     * optional parameters, call the {@link GetRoutes#execute()} method to invoke the remote
     * operation. <p> {@link
     * GetRoutes#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param content the {@link com.appspot.bustling_bay_88919.symbidrive.model.SymbidriveGetRoutesRequest}
     * @since 1.13
     */
    protected GetRoutes(com.appspot.bustling_bay_88919.symbidrive.model.SymbidriveGetRoutesRequest content) {
      super(Symbidrive.this, "POST", REST_PATH, content, com.appspot.bustling_bay_88919.symbidrive.model.SymbidriveGetRoutesResponse.class);
    }

    @Override
    public GetRoutes setAlt(java.lang.String alt) {
      return (GetRoutes) super.setAlt(alt);
    }

    @Override
    public GetRoutes setFields(java.lang.String fields) {
      return (GetRoutes) super.setFields(fields);
    }

    @Override
    public GetRoutes setKey(java.lang.String key) {
      return (GetRoutes) super.setKey(key);
    }

    @Override
    public GetRoutes setOauthToken(java.lang.String oauthToken) {
      return (GetRoutes) super.setOauthToken(oauthToken);
    }

    @Override
    public GetRoutes setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (GetRoutes) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetRoutes setQuotaUser(java.lang.String quotaUser) {
      return (GetRoutes) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetRoutes setUserIp(java.lang.String userIp) {
      return (GetRoutes) super.setUserIp(userIp);
    }

    @Override
    public GetRoutes set(String parameterName, Object value) {
      return (GetRoutes) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "get_user_info".
   *
   * This request holds the parameters needed by the symbidrive server.  After setting any optional
   * parameters, call the {@link GetUserInfo#execute()} method to invoke the remote operation.
   *
   * @param content the {@link com.appspot.bustling_bay_88919.symbidrive.model.SymbidriveUserInfoRequest}
   * @return the request
   */
  public GetUserInfo getUserInfo(com.appspot.bustling_bay_88919.symbidrive.model.SymbidriveUserInfoRequest content) throws java.io.IOException {
    GetUserInfo result = new GetUserInfo(content);
    initialize(result);
    return result;
  }

  public class GetUserInfo extends SymbidriveRequest<com.appspot.bustling_bay_88919.symbidrive.model.SymbidriveUserInfoResponse> {

    private static final String REST_PATH = "user/get_user_info";

    /**
     * Create a request for the method "get_user_info".
     *
     * This request holds the parameters needed by the the symbidrive server.  After setting any
     * optional parameters, call the {@link GetUserInfo#execute()} method to invoke the remote
     * operation. <p> {@link
     * GetUserInfo#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param content the {@link com.appspot.bustling_bay_88919.symbidrive.model.SymbidriveUserInfoRequest}
     * @since 1.13
     */
    protected GetUserInfo(com.appspot.bustling_bay_88919.symbidrive.model.SymbidriveUserInfoRequest content) {
      super(Symbidrive.this, "POST", REST_PATH, content, com.appspot.bustling_bay_88919.symbidrive.model.SymbidriveUserInfoResponse.class);
    }

    @Override
    public GetUserInfo setAlt(java.lang.String alt) {
      return (GetUserInfo) super.setAlt(alt);
    }

    @Override
    public GetUserInfo setFields(java.lang.String fields) {
      return (GetUserInfo) super.setFields(fields);
    }

    @Override
    public GetUserInfo setKey(java.lang.String key) {
      return (GetUserInfo) super.setKey(key);
    }

    @Override
    public GetUserInfo setOauthToken(java.lang.String oauthToken) {
      return (GetUserInfo) super.setOauthToken(oauthToken);
    }

    @Override
    public GetUserInfo setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (GetUserInfo) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetUserInfo setQuotaUser(java.lang.String quotaUser) {
      return (GetUserInfo) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetUserInfo setUserIp(java.lang.String userIp) {
      return (GetUserInfo) super.setUserIp(userIp);
    }

    @Override
    public GetUserInfo set(String parameterName, Object value) {
      return (GetUserInfo) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "register_user".
   *
   * This request holds the parameters needed by the symbidrive server.  After setting any optional
   * parameters, call the {@link RegisterUser#execute()} method to invoke the remote operation.
   *
   * @param content the {@link com.appspot.bustling_bay_88919.symbidrive.model.SymbidriveRegisterUserRequest}
   * @return the request
   */
  public RegisterUser registerUser(com.appspot.bustling_bay_88919.symbidrive.model.SymbidriveRegisterUserRequest content) throws java.io.IOException {
    RegisterUser result = new RegisterUser(content);
    initialize(result);
    return result;
  }

  public class RegisterUser extends SymbidriveRequest<com.appspot.bustling_bay_88919.symbidrive.model.SymbidriveUserResponse> {

    private static final String REST_PATH = "user/register_user";

    /**
     * Create a request for the method "register_user".
     *
     * This request holds the parameters needed by the the symbidrive server.  After setting any
     * optional parameters, call the {@link RegisterUser#execute()} method to invoke the remote
     * operation. <p> {@link
     * RegisterUser#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param content the {@link com.appspot.bustling_bay_88919.symbidrive.model.SymbidriveRegisterUserRequest}
     * @since 1.13
     */
    protected RegisterUser(com.appspot.bustling_bay_88919.symbidrive.model.SymbidriveRegisterUserRequest content) {
      super(Symbidrive.this, "POST", REST_PATH, content, com.appspot.bustling_bay_88919.symbidrive.model.SymbidriveUserResponse.class);
    }

    @Override
    public RegisterUser setAlt(java.lang.String alt) {
      return (RegisterUser) super.setAlt(alt);
    }

    @Override
    public RegisterUser setFields(java.lang.String fields) {
      return (RegisterUser) super.setFields(fields);
    }

    @Override
    public RegisterUser setKey(java.lang.String key) {
      return (RegisterUser) super.setKey(key);
    }

    @Override
    public RegisterUser setOauthToken(java.lang.String oauthToken) {
      return (RegisterUser) super.setOauthToken(oauthToken);
    }

    @Override
    public RegisterUser setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (RegisterUser) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public RegisterUser setQuotaUser(java.lang.String quotaUser) {
      return (RegisterUser) super.setQuotaUser(quotaUser);
    }

    @Override
    public RegisterUser setUserIp(java.lang.String userIp) {
      return (RegisterUser) super.setUserIp(userIp);
    }

    @Override
    public RegisterUser set(String parameterName, Object value) {
      return (RegisterUser) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "update_user_profile".
   *
   * This request holds the parameters needed by the symbidrive server.  After setting any optional
   * parameters, call the {@link UpdateUserProfile#execute()} method to invoke the remote operation.
   *
   * @param content the {@link com.appspot.bustling_bay_88919.symbidrive.model.SymbidriveUpdateUserInfoRequest}
   * @return the request
   */
  public UpdateUserProfile updateUserProfile(com.appspot.bustling_bay_88919.symbidrive.model.SymbidriveUpdateUserInfoRequest content) throws java.io.IOException {
    UpdateUserProfile result = new UpdateUserProfile(content);
    initialize(result);
    return result;
  }

  public class UpdateUserProfile extends SymbidriveRequest<com.appspot.bustling_bay_88919.symbidrive.model.SymbidriveUserResponse> {

    private static final String REST_PATH = "user/update_user_profile";

    /**
     * Create a request for the method "update_user_profile".
     *
     * This request holds the parameters needed by the the symbidrive server.  After setting any
     * optional parameters, call the {@link UpdateUserProfile#execute()} method to invoke the remote
     * operation. <p> {@link UpdateUserProfile#initialize(com.google.api.client.googleapis.services.Ab
     * stractGoogleClientRequest)} must be called to initialize this instance immediately after
     * invoking the constructor. </p>
     *
     * @param content the {@link com.appspot.bustling_bay_88919.symbidrive.model.SymbidriveUpdateUserInfoRequest}
     * @since 1.13
     */
    protected UpdateUserProfile(com.appspot.bustling_bay_88919.symbidrive.model.SymbidriveUpdateUserInfoRequest content) {
      super(Symbidrive.this, "POST", REST_PATH, content, com.appspot.bustling_bay_88919.symbidrive.model.SymbidriveUserResponse.class);
    }

    @Override
    public UpdateUserProfile setAlt(java.lang.String alt) {
      return (UpdateUserProfile) super.setAlt(alt);
    }

    @Override
    public UpdateUserProfile setFields(java.lang.String fields) {
      return (UpdateUserProfile) super.setFields(fields);
    }

    @Override
    public UpdateUserProfile setKey(java.lang.String key) {
      return (UpdateUserProfile) super.setKey(key);
    }

    @Override
    public UpdateUserProfile setOauthToken(java.lang.String oauthToken) {
      return (UpdateUserProfile) super.setOauthToken(oauthToken);
    }

    @Override
    public UpdateUserProfile setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (UpdateUserProfile) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public UpdateUserProfile setQuotaUser(java.lang.String quotaUser) {
      return (UpdateUserProfile) super.setQuotaUser(quotaUser);
    }

    @Override
    public UpdateUserProfile setUserIp(java.lang.String userIp) {
      return (UpdateUserProfile) super.setUserIp(userIp);
    }

    @Override
    public UpdateUserProfile set(String parameterName, Object value) {
      return (UpdateUserProfile) super.set(parameterName, value);
    }
  }

  /**
   * Builder for {@link Symbidrive}.
   *
   * <p>
   * Implementation is not thread-safe.
   * </p>
   *
   * @since 1.3.0
   */
  public static final class Builder extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient.Builder {

    /**
     * Returns an instance of a new builder.
     *
     * @param transport HTTP transport, which should normally be:
     *        <ul>
     *        <li>Google App Engine:
     *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
     *        <li>Android: {@code newCompatibleTransport} from
     *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
     *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
     *        </li>
     *        </ul>
     * @param jsonFactory JSON factory, which may be:
     *        <ul>
     *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
     *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
     *        <li>Android Honeycomb or higher:
     *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
     *        </ul>
     * @param httpRequestInitializer HTTP request initializer or {@code null} for none
     * @since 1.7
     */
    public Builder(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
        com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      super(
          transport,
          jsonFactory,
          DEFAULT_ROOT_URL,
          DEFAULT_SERVICE_PATH,
          httpRequestInitializer,
          false);
    }

    /** Builds a new instance of {@link Symbidrive}. */
    @Override
    public Symbidrive build() {
      return new Symbidrive(this);
    }

    @Override
    public Builder setRootUrl(String rootUrl) {
      return (Builder) super.setRootUrl(rootUrl);
    }

    @Override
    public Builder setServicePath(String servicePath) {
      return (Builder) super.setServicePath(servicePath);
    }

    @Override
    public Builder setHttpRequestInitializer(com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      return (Builder) super.setHttpRequestInitializer(httpRequestInitializer);
    }

    @Override
    public Builder setApplicationName(String applicationName) {
      return (Builder) super.setApplicationName(applicationName);
    }

    @Override
    public Builder setSuppressPatternChecks(boolean suppressPatternChecks) {
      return (Builder) super.setSuppressPatternChecks(suppressPatternChecks);
    }

    @Override
    public Builder setSuppressRequiredParameterChecks(boolean suppressRequiredParameterChecks) {
      return (Builder) super.setSuppressRequiredParameterChecks(suppressRequiredParameterChecks);
    }

    @Override
    public Builder setSuppressAllChecks(boolean suppressAllChecks) {
      return (Builder) super.setSuppressAllChecks(suppressAllChecks);
    }

    /**
     * Set the {@link SymbidriveRequestInitializer}.
     *
     * @since 1.12
     */
    public Builder setSymbidriveRequestInitializer(
        SymbidriveRequestInitializer symbidriveRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(symbidriveRequestInitializer);
    }

    @Override
    public Builder setGoogleClientRequestInitializer(
        com.google.api.client.googleapis.services.GoogleClientRequestInitializer googleClientRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(googleClientRequestInitializer);
    }
  }
}
